{"version":3,"sources":["Components/HeaderComponent.js","Components/FooterComponent.js","Components/AccountComponents/AccountsComponent.js","Components/TransactionComponents/TransactionsComponent.js","Components/HomeComponents/HomeComponent.js","Components/AccountComponents/CreateAccountComponent.js","Components/AccountComponents/ViewAccountsComponent.js","Components/TransactionComponents/VeiwTransactionsComponent.js","Components/AccountComponents/AccountDetailComponent.js","Components/MainComponent.js","App.js","index.js"],"names":["Header","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","isOpenNavbar","toggleNavbar","setState","inherits","createClass","key","value","react_default","a","createElement","reactstrap_es","dark","expand","color","className","href","onClick","isOpen","navbar","Link","to","React","Component","Footer","Accounts","props","style","border","height","margin","padding","textDecoration","accountsLength","Transactions","transcationsLength","debits","credits","Home","accounts","transactionsLength","transactions","CreateAccount","accountForm","document","getElementById","name","accountType","initDeposite","checkValidity","trim","JSON","parse","localStorage","getItem","id","Math","random","registered","Date","toLocaleString","push","balance","totalDebits","Number","setItem","stringify","transactionTracer","type","description","updateState","updateAlert","refs","navigateTo","click","validity","valueMissing","focus","rangeUnderflow","noValidate","display","ref","htmlFor","placeholder","required","min","defaultValue","checkValidation","ViewAccounts","map","account","fontFamily","cursor","ViewTransactions","TransactionDetail","transactionDetail","toggleModal","isModalOpen","_this2","toggle","transaction","ViewAccountDetail","getAccount","filter","acc","match","params","closeModal","isOpenDepositeModal","isOpenWithdrawModal","openDepositeModal","openWithdrawModal","closeAlert","isOpenAlert","DepositeModal","col","alertMsg","cash","depositeForm","depositeAmount","WithdrawModal","max","withdrawForm","withdrawAmount","totalCredits","rangeOverflow","window","confirm","delAccount","Main","transctions","deb","debts","crd","trans","accountToDelIndex","index","console","log","splice","msg","isAlertOpen","onDismiss","amount","indexToUpdateAmount","BrowserRouter","HeaderComponent_Header","Switch","Route","path","render","CreateAccountComponent_CreateAccount","p","AccountDetailComponent_ViewAccountDetail","VeiwTransactionsComponent_ViewTransactions","App","MainComponent_Main","ReactDOM","src_App"],"mappings":"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","file":"static/js/main.047ff392.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { Navbar, NavbarBrand, NavItem, Nav, NavbarToggler, Collapse } from 'reactstrap';\r\nexport class Header extends React.Component {\r\n    state = {\r\n        isOpenNavbar: false\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar dark expand=\"md\" color=\"dark\">\r\n                    <div className=\"container\">\r\n                        <NavbarBrand href=\"/\">Bank</NavbarBrand>\r\n                        <NavbarToggler onClick={this.toggleNavbar} />\r\n                        <Collapse isOpen={this.state.isOpenNavbar} navbar>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Link to=\"/\" className=\"nav-link\">\r\n                                    Dashboard\r\n                                    </Link>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <Link to=\"/viewaccounts\" className=\"nav-link\">\r\n                                    Accounts\r\n                                    </Link>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <Link to=\"/viewtransactions\" className=\"nav-link\">\r\n                                    Transactions\r\n                                    </Link>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n            </div>\r\n        )\r\n    };\r\n    toggleNavbar = () => {\r\n        this.setState({ isOpenNavbar: !this.state.isOpenNavbar });\r\n    }\r\n\r\n} ","import React from 'react'\r\nexport function Footer(){\r\n    return(\r\n        <footer className=\"page-footer\">\r\n        <div className=\" text-copyright text-center \">\r\n        &copy; Copyright,2018\r\n        </div>\r\n        </footer> \r\n    )\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nexport function Accounts(props) {\r\n    return (\r\n        <div className=\"col-md-12 col-lg-6\" >\r\n            <div className=\"m-1 p-1 shadow p-3 mb-5 bg-white rounded\" style={{ border: \"1px solid #ccc\",height:230}}>\r\n                <div className=\"container\">\r\n                    <div className=\"row border-bottom\">\r\n                        <div className=\"mb-1 col-md-12 col-lg-5\">\r\n                            <h3 style={{ margin: \"0px\", padding: \"0px\" }}>Accounts</h3>\r\n                        </div>\r\n                        <div className=\" mb-1 col-md-12 d-flex flex-row-reverse col-lg-4\">\r\n                            <Link to=\"/createaccount\">\r\n                                <button className=\" btn btn-sm btn-dark\">Add new account</button>\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\" mb-1 col-md-12 d-flex flex-row-reverse col-lg-3\">\r\n                            <Link to=\"/viewaccounts\">\r\n                                <button className=\"btn btn-sm btn-success\">View all</button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                    <Link to=\"/viewaccounts\" className=\"text-dark\" style={{ textDecoration: 'none' }}>\r\n                        <div className=\"row\">\r\n                            <h1 className=\" col-12 text-center\">{props.accountsLength}</h1>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <h4 className=\" col-12 text-center\">Accounts</h4>\r\n                        </div>\r\n                    </Link>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Badge} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nexport function Transactions(props) {\r\n    return (\r\n        <div className=\"col-md-12 col-lg-6\" >\r\n            <div className=\"m-1 p-1 shadow p-3 mb-5 bg-white rounded\" style={{ border: \"1px solid #ccc\" ,height:230 }}>\r\n                <div className=\"container\">\r\n                    <div className=\"row border-bottom \">\r\n                        <div className=\"mb-1 col-md-12 col-lg-5\">\r\n                            <h3 style={{ margin: \"0px\", padding: \"0px\" }}>Transactions</h3>\r\n                        </div>\r\n                        <div className=\" mb-1 col-md-12 offset-lg-4 d-flex flex-row-reverse col-lg-3\">\r\n                            <Link to=\"/viewtransactions\">\r\n                                <button className=\"btn btn-sm btn-success\">View all</button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                    <Link to=\"/viewtransactions\" className=\"text-dark\" style={{ textDecoration: 'none' }}>\r\n                        <div className=\"row\">\r\n                            <h1 className=\" col-12 text-center\">{props.transcationsLength}</h1>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <h4 className=\" col-12 text-center\">Transactions</h4>\r\n                        </div>\r\n                    </Link>\r\n                    <div  className=\"row\">\r\n                        <div className=\"col-6\">\r\n                            <h6>\r\n                               <Badge color=\"secondary\">Debits:{props.debits}</Badge>\r\n                            </h6>\r\n                        </div>\r\n                        <div className=\"col-6 d-flex justify-content-end\">\r\n                            <h6>\r\n                            <Badge color=\"secondary\">Credits:{props.credits}</Badge>\r\n                            </h6>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}","import React from 'react';\r\nimport { Accounts } from '../AccountComponents/AccountsComponent';\r\nimport { Transactions } from '../TransactionComponents/TransactionsComponent';\r\nexport function Home(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Accounts   accountsLength={props.accounts === null ? '0' : props.accounts.length} />\r\n                <Transactions debits={props.debits} credits={props.credits} transactionsLength={props.transactions === null ? '0' : props.transactions.length} />\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nexport class CreateAccount extends React.Component {\r\n    checkValidation() {\r\n        const accountForm = document.getElementById(\"accountForm\");\r\n        const name = document.getElementById(\"name\");\r\n        const accountType = document.getElementById(\"accountType\");\r\n        const initDeposite = document.getElementById(\"initDeposite\");\r\n        if (accountForm.checkValidity() && name.value.trim() !== \"\" && name.value.trim() !== \"\") {\r\n            let accounts = JSON.parse(localStorage.getItem(\"accounts\"));\r\n            let id = Math.random() * 100000000000000000;\r\n            let registered = new Date().toLocaleString();\r\n            if (accounts === null) {\r\n                accounts = [];\r\n                accounts.push(\r\n                    {\r\n                        id: id,\r\n                        name: name.value,\r\n                        accountType: accountType.value,\r\n                        balance: initDeposite.value,\r\n                        registered: registered\r\n                    }\r\n                )\r\n                this.props.totalDebits(Number(initDeposite.value));\r\n                localStorage.setItem(\"accounts\", JSON.stringify(accounts));\r\n            } else {\r\n                accounts.push({\r\n                    id: Math.random() * 100000000000000000,\r\n                    name: name.value,\r\n                    accountType: accountType.value,\r\n                    balance: initDeposite.value,\r\n                    registered: new Date().toLocaleString()\r\n                });\r\n                this.props.totalDebits(Number(initDeposite.value));\r\n                localStorage.setItem(\"accounts\", JSON.stringify(accounts));\r\n            }\r\n            this.props.transactionTracer(\r\n                {\r\n                    id: id,\r\n                    balance: initDeposite.value,\r\n                    type: 'credit',\r\n                    registered: registered,\r\n                    description: \"Initial Credit\"\r\n                }\r\n            );\r\n            this.props.updateState();\r\n            this.props.updateAlert(true, 'Account Created !', 'success');\r\n            this.refs.navigateTo.click();\r\n        } else {\r\n            if (name.validity.valueMissing || name.value.trim() === \"\") {\r\n                this.props.updateAlert(true, 'Please enter full name !', 'danger');\r\n                name.focus();\r\n            }\r\n            else if (accountType.validity.valueMissing) {\r\n                this.props.updateAlert(true, 'Please select account type !', 'danger');\r\n                accountType.focus();\r\n\r\n            }\r\n            else if (initDeposite.validity.valueMissing) {\r\n                this.props.updateAlert(true, 'please deposite some amount !', 'danger');\r\n                initDeposite.focus();\r\n\r\n            }\r\n            else if (initDeposite.validity.rangeUnderflow) {\r\n                this.props.updateAlert(true, 'please deposite ammout > or = 100 !', 'danger');\r\n                initDeposite.focus();\r\n            }\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"mt-2 col-12\">\r\n                <h2 className=\"mt-1 text-center text-dark \">Enter account details below</h2>\r\n                <form id=\"accountForm\" noValidate>\r\n                    <div>\r\n                        <Link to=\"/\">\r\n                            <button type=\"button\" className=\"btn btn-sm btn-dark\">\r\n                                Back to Dashbord\r\n                            </button>\r\n                        </Link>\r\n                    </div>\r\n                    <div style={{ display: 'none' }}>\r\n                        <Link to=\"/viewaccounts\">\r\n                            <button ref=\"navigateTo\" type=\"button\" className=\"btn btn-sm btn-dark\">\r\n                                Back to Dashbord\r\n                            </button>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"name\">Enter Full Name</label>\r\n                        <input className=\"form-control\" type=\"text\" id=\"name\" placeholder=\"Enter full name\" required />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"accountType\">Select account type</label>\r\n                        <select className=\"form-control\" id=\"accountType\" required>\r\n                            <option value=\"\" >Select Account Type</option>\r\n                            <option value=\"current\">Current</option>\r\n                            <option value=\"saving\">Saving</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"initDeposite\">Initail Deposite</label>\r\n                        <input className=\"form-control\" type=\"number\" min=\"100\" id=\"initDeposite\" defaultValue=\"1000\" required />\r\n                    </div>\r\n                    <div className=\"d-flex flex-row-reverse\">\r\n                        <button type=\"button\" onClick={() => { this.checkValidation(this.props) }} className=\" btn btn-success btn-sm\">CREATE ACCOUNT</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nexport function ViewAccounts(props) {\r\n    if (props.accounts === null || props.accounts.length === 0) {\r\n        return (\r\n            <div className=\"col-12 mt-4\">\r\n                <div>\r\n                    <Link to=\"/\">\r\n                        <button type=\"button\" className=\"btn btn-sm btn-dark\">\r\n                            Back to Dashboard\r\n                    </button>\r\n                    </Link>\r\n                </div>\r\n                <h2 className=\"text-center text-dark\">\r\n                    There is no account!\r\n                 </h2>\r\n                 <div className=\"d-flex justify-content-center mb-4\">\r\n                 <Link to=\"/createaccount\" >\r\n                 <button type=\"button\" className=\"btn btn-primary\">Create account</button>\r\n                 </Link>\r\n                 </div>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n\r\n        return (\r\n            <div className=\"col-12 mt-4\">\r\n                <h2 className=\"text-center text-dark\">Accounts</h2>\r\n                <div className=\"mb-2\">\r\n                    <Link to=\"/\">\r\n                        <button type=\"button\" className=\"btn btn-sm btn-dark\">\r\n                            Back to Dashbord\r\n                    </button>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"table-responsive\">\r\n\r\n                    <table className=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Account #</th>\r\n                                <th>Name</th>\r\n                                <th>Registered</th>\r\n                                <th>Account Type</th>\r\n                                <th>Balance</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                props.accounts.map((account) => (\r\n                                    <tr key={account.id}>\r\n                                        <td style={{ color: 'blue', fontFamily: 'cursive', cursor: 'pointer' }}>\r\n                                            <Link to={\"accountdetail/\" + account.id}>{account.id}</Link></td>\r\n                                        <td>{account.name}</td>\r\n                                        <td style={{ fontFamily: 'cursive' }}>{account.registered}</td>\r\n                                        <td>{account.accountType}</td>\r\n                                        <td>{account.balance}</td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nexport class ViewTransactions extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false,\r\n            transactionDetail: null\r\n        }\r\n\r\n    }\r\n\r\n    TransactionDetail =\r\n        () => {\r\n            if (this.state.transactionDetail === null) {\r\n                return <div></div>\r\n            } else {\r\n                return (\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>Account #</td>\r\n                                    <td>{this.state.transactionDetail.id}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Registered</td>\r\n                                    <td>{this.state.transactionDetail.registered}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Type</td>\r\n                                    <td>{this.state.transactionDetail.type}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Balance</td>\r\n                                    <td>{this.state.transactionDetail.balance}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Description</td>\r\n                                    <td>{this.state.transactionDetail.description}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n    toggleModal = () => {\r\n        this.setState({\r\n            isModalOpen: false\r\n        })\r\n    }\r\n    render() {\r\n        if (this.props.transactions === null) {\r\n            return (\r\n                <div className=\"col-12 mt-4\">\r\n                    <div>\r\n                        <Link to=\"/\">\r\n                            <button type=\"button\" className=\"btn btn-sm btn-dark\">\r\n                                Back to Dashboard\r\n                             </button>\r\n                        </Link>\r\n                    </div>\r\n                    <h2 className=\"text-center text-dark\">\r\n                        There is no transaction!\r\n                    </h2>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"col-12 mt-4\">\r\n                    <Modal isOpen={this.state.isModalOpen}>\r\n                        <ModalHeader toggle={this.toggleModal}>\r\n                            Transaction\r\n                                    </ModalHeader>\r\n                        <ModalBody>\r\n                            {this.TransactionDetail(this.state.transactionDetail)}\r\n                        </ModalBody>\r\n                    </Modal>\r\n                    <h2 className=\"text-center text-dark\">Accounts</h2>\r\n                    <div className=\"mb-2\">\r\n                        <Link to=\"/\">\r\n                            <button type=\"button\" className=\"btn btn-sm btn-dark\">\r\n                                Back to Dashbord\r\n                                                </button>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Account #</th>\r\n                                    <th>Registered</th>\r\n                                    <th>Type</th>\r\n                                    <th>Balance</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.props.transactions.map((transaction) => (\r\n                                        <tr key={Math.random()}>\r\n                                            <td style={{ color: 'blue', fontFamily: 'cursive', cursor: 'pointer' }}>\r\n                                                <a href=\"void:javascript:(0)\" onClick={() => { this.setState({ isModalOpen: true, transactionDetail: transaction }) }}>{transaction.id}</a></td>\r\n                                            <td style={{ fontFamily: 'cursive' }}>{transaction.registered}</td>\r\n                                            <td>{transaction.type}</td>\r\n                                            <td>{transaction.balance}</td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Modal, ModalBody, ModalHeader, Alert } from 'reactstrap';\r\nexport class ViewAccountDetail extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpenDepositeModal: false,\r\n            isOpenWithdrawModal: false,\r\n            isOpenAlert: false,\r\n            account: this.getAccount(),\r\n            alertMsg: '',\r\n            col: ''\r\n        }\r\n    }\r\n    getAccount = () => {\r\n        let account ;\r\n        let accounts = JSON.parse(localStorage.getItem(\"accounts\"));\r\n        if (accounts !== null && accounts.length !== 0) {\r\n            account = accounts.filter(\r\n                (acc) => acc.id === Number(this.props.props.match.params.id)\r\n            )[0]\r\n        }\r\n        return account;\r\n    }\r\n    closeModal = () => {\r\n        this.setState({\r\n            isOpenDepositeModal: false,\r\n            isOpenWithdrawModal: false,\r\n            account:this.getAccount()\r\n        })\r\n    }\r\n    openDepositeModal = () => {\r\n        this.setState({\r\n            isOpenDepositeModal: true\r\n        })\r\n    }\r\n    openWithdrawModal = () => {\r\n        this.setState({\r\n            isOpenWithdrawModal: true\r\n        })\r\n    }\r\n    closeAlert = () => {\r\n        this.setState(\r\n            {\r\n                isOpenAlert: false\r\n            }\r\n        )\r\n    }\r\n    DepositeModal = () => {\r\n\r\n        let depositeValidation = () => {\r\n            let cash = document.getElementById(\"cash\");\r\n            let depositeForm = document.getElementById(\"depositeForm\");\r\n            let account;\r\n            let accounts = JSON.parse(localStorage.getItem(\"accounts\"));\r\n            if (accounts !== null && accounts.length !== 0) {\r\n                account = accounts.filter(\r\n                    (acc) => acc.id === Number(this.props.props.match.params.id)\r\n                )[0]\r\n            }\r\n            if (depositeForm.checkValidity()) {\r\n                this.props.depositeAmount(\r\n                    cash.value,\r\n                    {\r\n                        id: account.id,\r\n                        registered: new Date().toLocaleString(),\r\n                        type: \"credit\",\r\n                        balance: cash.value\r\n                    }\r\n                )\r\n                this.props.totalDebits(Number(cash.value));\r\n                this.closeModal();\r\n                this.props.updateAlert(true, 'Amount deposited!', 'success');\r\n\r\n\r\n            }\r\n            else if (cash.validity.rangeUnderflow) {\r\n                this.setState({\r\n                    isOpenAlert: true,\r\n                    alertMsg: 'Please enter valid amount!',\r\n                    col: 'danger'\r\n                })\r\n            }\r\n            else if (cash.validity.valueMissing) {\r\n                this.setState({\r\n                    isOpenAlert: true,\r\n                    alertMsg: 'Please enter  amount!',\r\n                    col: 'danger'\r\n                })\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Modal isOpen={this.state.isOpenDepositeModal} >\r\n                <ModalHeader toggle={this.closeModal}>\r\n                    Deposite Amount\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Alert isOpen={this.state.isOpenAlert} color={this.state.col} toggle={this.closeAlert}>\r\n                        {this.state.alertMsg}\r\n                    </Alert>\r\n                    <form id=\"depositeForm\" noValidate>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"cash\">Amount</label>\r\n                            <input className=\"form-control\" id=\"cash\" placeholder=\"Enter amount\" type=\"number\" min=\"0\" required />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"description\">Description</label>\r\n                            <input className=\"form-control\" id=\"description\" placeholder=\"Enter description(optional)\" type=\"text\" />\r\n                        </div>\r\n                        <div>\r\n                            <button onClick={depositeValidation} type=\"button\" className=\"btn btn-sm btn-dark\" id=\"deposite\">Deposite</button>\r\n                        </div>\r\n                    </form>\r\n                </ModalBody>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    // wtihdraw modal\r\n\r\n    WithdrawModal = () => {\r\n\r\n        let withdrawValidation = () => {\r\n            let cash = document.getElementById(\"cash\");\r\n            let withdrawForm = document.getElementById(\"withdrawForm\");\r\n            let account;\r\n            let accounts = JSON.parse(localStorage.getItem(\"accounts\"));\r\n            if (accounts !== null && accounts.length !== 0) {\r\n                account = accounts.filter(\r\n                    (acc) => acc.id === Number(this.props.props.match.params.id)\r\n                )[0]\r\n            }\r\n            if (withdrawForm.checkValidity()) {\r\n                this.props.withdrawAmount(\r\n                    cash.value,\r\n                    {\r\n                        id: account.id,\r\n                        registered: new Date().toLocaleString(),\r\n                        type: \"debit\",\r\n                        balance: cash.value\r\n                    }\r\n                )\r\n                this.props.totalCredits(Number(cash.value));\r\n                this.closeModal();\r\n                this.props.updateAlert(true, 'Amount withdrawn!', 'success');\r\n\r\n\r\n            }\r\n            else if (cash.validity.rangeUnderflow || cash.validity.rangeOverflow) {\r\n                this.setState({\r\n                    isOpenAlert: true,\r\n                    alertMsg: 'Please enter valid amount!',\r\n                    col: 'danger'\r\n                })\r\n            }\r\n            else if (cash.validity.valueMissing) {\r\n                this.setState({\r\n                    isOpenAlert: true,\r\n                    alertMsg: 'Please enter  amount!',\r\n                    col: 'danger'\r\n                })\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Modal isOpen={this.state.isOpenWithdrawModal} >\r\n                <ModalHeader toggle={this.closeModal}>\r\n                    Withdraw Amount\r\n            </ModalHeader>\r\n                <ModalBody>\r\n                    <Alert isOpen={this.state.isOpenAlert} color={this.state.col} toggle={this.closeAlert}>\r\n                        {this.state.alertMsg}\r\n                    </Alert>\r\n                    <form id=\"withdrawForm\" noValidate>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"cash\">Amount</label>\r\n                            <input className=\"form-control\" id=\"cash\" placeholder={`Maximum amount:${this.state.account.balance}`} type=\"number\" min=\"0\" max={this.state.account.balance} required />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"description\">Description</label>\r\n                            <input className=\"form-control\" id=\"description\" placeholder=\"Enter description(optional)\" type=\"text\" />\r\n                        </div>\r\n                        <div>\r\n                            <button onClick={withdrawValidation} type=\"button\" className=\"btn btn-sm btn-dark\" >Withdraw</button>\r\n                        </div>\r\n                    </form>\r\n                </ModalBody>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        let account;\r\n        let accounts = JSON.parse(localStorage.getItem(\"accounts\"));\r\n        if (accounts !== null && accounts.length !== 0) {\r\n            account = accounts.filter(\r\n                (acc) => acc.id === Number(this.props.props.match.params.id)\r\n            )[0];\r\n        }\r\n        let delAccount = () => {\r\n            let confirm = window.confirm(\"Are you sure you want to delete account!\");\r\n            if (confirm) {\r\n                this.props.delAccount(account.id);\r\n                this.props.updateAlert(true, `Account# ${account.id} has been deleted!`, \"danger\");\r\n                document.getElementById(\"navigateToBack\").click()\r\n            }\r\n\r\n        }\r\n        if (!account) {\r\n            return (\r\n                <div className=\"col-12 mt-2\">\r\n                    <div>\r\n                        <Link to=\"/viewaccounts\">\r\n                            <button type=\"button\" className=\"mb-2 btn btn-sm btn-dark\">\r\n                                Back to Accounts\r\n                                </button>\r\n                        </Link>\r\n                    </div>\r\n                    <h2 className=\"text-danger\">No record found!</h2>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"col-12 mt-2\" >\r\n                    <div>\r\n                        {this.DepositeModal()}\r\n                    </div>\r\n                    <div>\r\n                        {this.WithdrawModal()}\r\n                    </div>\r\n                    <h3 className=\"text-dark text-center\">Account Detail</h3>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <Link to=\"/viewaccounts\">\r\n                            <button type=\"button\" id=\"navigateToBack\" className=\"mb-2 btn btn-sm btn-dark\">\r\n                                Back to Accounts\r\n                                </button>\r\n                        </Link>\r\n                        <button onClick={delAccount} type=\"button\" className=\"mb-2 btn btn-sm btn-danger\">\r\n                            Delete Account\r\n                                </button>\r\n                    </div>\r\n                    <table className=\"table\">\r\n                        <tbody>\r\n\r\n                            <tr>\r\n                                <td>Account #</td>\r\n                                <td>{account.id}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Name</td>\r\n                                <td>{account.name}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Registered</td>\r\n                                <td>{account.registered}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Account Type</td>\r\n                                <td>{account.accountType}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Balance</td>\r\n                                <td>{account.balance}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <div>\r\n                        <div>\r\n                            <button type=\"button\" onClick={this.openDepositeModal} className=\"btn btn-sm btn-info\">\r\n                                Deposite\r\n                                </button>\r\n                            <button type=\"button\" onClick={this.openWithdrawModal} className=\"ml-4 btn btn-sm btn-danger\">\r\n                                Withdraw\r\n                                </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport { Alert } from 'reactstrap';\r\nimport { Header } from './HeaderComponent';\r\nimport { Footer } from './FooterComponent';\r\nimport { Home } from './HomeComponents/HomeComponent';\r\nimport { CreateAccount } from './AccountComponents/CreateAccountComponent'\r\nimport { ViewAccounts } from './AccountComponents/ViewAccountsComponent';\r\nimport { ViewTransactions } from './TransactionComponents/VeiwTransactionsComponent';\r\nimport { ViewAccountDetail } from './AccountComponents/AccountDetailComponent';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nexport class Main extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            accounts: JSON.parse(localStorage.getItem(\"accounts\")),\r\n            transctions: JSON.parse(localStorage.getItem(\"transactions\")),\r\n            debts: JSON.parse(localStorage.getItem(\"debits\")) === null ? 0 : JSON.parse(localStorage.getItem(\"debits\")),\r\n            credits: JSON.parse(localStorage.getItem(\"credits\")) === null ? 0 : JSON.parse(localStorage.getItem(\"credits\")),\r\n            isAlertOpen: false,\r\n            alertMsg: '',\r\n            color: '',\r\n        }\r\n    }\r\n    updateState = () => {\r\n        this.setState({\r\n            accounts: JSON.parse(localStorage.getItem(\"accounts\")),\r\n            transctions: JSON.parse(localStorage.getItem(\"transactions\"))\r\n        })\r\n    }\r\n    totalDebits = (deb) => {\r\n        let debts = JSON.parse(localStorage.getItem(\"debits\"));\r\n        if (debts === null) {\r\n            debts = deb;\r\n        }\r\n        else {\r\n            debts += deb\r\n        }\r\n        this.setState({\r\n            debts: debts\r\n        })\r\n        localStorage.setItem(\"debits\", JSON.stringify(debts));\r\n    }\r\n    totalCredits = (crd) => {\r\n        let credits = JSON.parse(localStorage.getItem(\"credits\"));\r\n        if (credits === null) {\r\n            credits = crd;\r\n        }\r\n        else {\r\n            credits += crd\r\n        }\r\n        this.setState({\r\n            credits: credits\r\n        })\r\n        localStorage.setItem(\"credits\", JSON.stringify(credits));\r\n    }\r\n    transactionTracer = (trans) => {\r\n        let transactions = JSON.parse(localStorage.getItem(\"transactions\"));\r\n        if (transactions === null) {\r\n            transactions = [];\r\n            transactions.push(trans);\r\n        } else {\r\n            transactions.push(trans);\r\n        }\r\n        localStorage.setItem(\"transactions\", JSON.stringify(transactions))\r\n        this.setState({\r\n            transactions: transactions\r\n        })\r\n    }\r\n    delAccount = (id) => {\r\n        let accounts = JSON.parse(localStorage.getItem(\"accounts\"));\r\n        let accountToDelIndex;\r\n        accounts.filter((account, index) => {\r\n            if (account.id === id) {\r\n                accountToDelIndex = index;\r\n                console.log(index);\r\n            }\r\n            return index;\r\n        });\r\n        accounts.splice(accountToDelIndex, 1);\r\n        localStorage.setItem(\"accounts\", JSON.stringify(accounts));\r\n        this.updateState();\r\n    }\r\n    updateAlert = (isOpen, msg, col) => {\r\n        this.setState({\r\n            isAlertOpen: isOpen,\r\n            alertMsg: msg,\r\n            color: col\r\n        })\r\n    }\r\n    onDismiss = () => {\r\n        this.setState({\r\n            isAlertOpen: false\r\n        })\r\n    }\r\n    depositeAmount = (amount, trans) => {\r\n        let accounts = JSON.parse(localStorage.getItem(\"accounts\"));\r\n        let indexToUpdateAmount;\r\n        accounts.filter((account, index) => {\r\n            if (account.id === trans.id) {\r\n                indexToUpdateAmount = index;\r\n            }\r\n            return index;\r\n        });\r\n        accounts[indexToUpdateAmount].balance = Number(accounts[indexToUpdateAmount].balance) + Number(amount);\r\n        localStorage.setItem(\"accounts\", JSON.stringify(accounts));\r\n        this.transactionTracer(trans);\r\n        this.updateState();\r\n    }\r\n    withdrawAmount = (amount, trans) => {\r\n        let accounts = JSON.parse(localStorage.getItem(\"accounts\"));\r\n        let indexToUpdateAmount;\r\n        accounts.filter((account, index) => {\r\n            if (account.id === trans.id) {\r\n                indexToUpdateAmount = index;\r\n            }\r\n            return index;\r\n        });\r\n        accounts[indexToUpdateAmount].balance -= amount;\r\n        localStorage.setItem(\"accounts\", JSON.stringify(accounts));\r\n        this.transactionTracer(trans);\r\n        this.updateState();\r\n    }\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <div>\r\n                    <Header />\r\n                    <div className=\"container\">\r\n                        <Alert color={this.state.color} isOpen={this.state.isAlertOpen} toggle={this.onDismiss}>{this.state.alertMsg}</Alert>\r\n                        <div className=\"row\">\r\n                            <Switch>\r\n                                <Route path=\"/createaccount\" render={() => <CreateAccount updateState={this.updateState} totalDebits={this.totalDebits} transactionTracer={this.transactionTracer} updateAlert={this.updateAlert} />} />\r\n                                <Route path=\"/accountdetail/:id\" render={(p) => <ViewAccountDetail props={p} delAccount={this.delAccount} totalCredits={this.totalCredits} totalDebits={this.totalDebits} depositeAmount={this.depositeAmount} withdrawAmount={this.withdrawAmount} updateAlert={this.updateAlert} />} />\r\n                                <Route path=\"/viewaccounts\" render={() => <ViewAccounts accounts={this.state.accounts} />} />\r\n                                <Route path=\"/viewtransactions\" render={() => <ViewTransactions transactions={this.state.transctions} />} />\r\n                                <Route path=\"/\" render={() => <Home accounts={this.state.accounts} credits={this.state.credits} debits={this.state.debts} updateAlert={this.updateAlert} transactions={this.state.transctions} />} />\r\n                            </Switch>\r\n                        </div>\r\n                    </div>\r\n                    <Footer />\r\n                </div>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Main } from './Components/MainComponent';\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n                <div>\r\n                        <Main />\r\n                </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}