{"version":3,"sources":["Components/HeaderComponent.js","Components/FooterComponent.js","Components/AccountComponents/AccountsComponent.js","Components/TransactionComponents/TransactionsComponent.js","Components/HomeComponents/HomeComponent.js","Components/AccountComponents/CreateAccountComponent.js","Components/AccountComponents/ViewAccountsComponent.js","Components/TransactionComponents/VeiwTransactionsComponent.js","Components/AccountComponents/AccountDetailComponent.js","Components/MainComponent.js","App.js","index.js"],"names":["Header","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","isOpenNavbar","toggleNavbar","setState","inherits","createClass","key","value","react_default","a","createElement","reactstrap_es","dark","expand","color","className","href","onClick","isOpen","navbar","Link","to","React","Component","Footer","Accounts","props","style","border","margin","padding","textDecoration","accountsLength","Transactions","transctionsLength","debits","credits","Home","accounts","transactions","CreateAccount","accountForm","document","getElementById","name","accountType","initDeposite","checkValidity","trim","JSON","parse","localStorage","getItem","id","Math","random","registered","Date","toLocaleString","push","balance","totalDebits","Number","setItem","stringify","transactionTracer","type","description","updateState","updateAlert","refs","navigateTo","click","validity","valueMissing","focus","rangeUnderflow","noValidate","display","ref","htmlFor","placeholder","required","min","defaultValue","checkValidation","ViewAccounts","map","account","fontFamily","cursor","ViewTransactions","TransactionDetail","transactionDetail","toggleModal","isModalOpen","_this2","toggle","transaction","ViewAccountDetail","getAccount","filter","acc","match","params","closeModal","isOpenDepositeModal","isOpenWithdrawModal","openDepositeModal","openWithdrawModal","closeAlert","isOpenAlert","DepositeModal","col","alertMsg","cash","depositeForm","depositeAmount","WithdrawModal","max","withdrawForm","withdrawAmount","totalCredits","rangeOverflow","window","confirm","delAccount","Main","transctions","deb","debts","crd","trans","accountToDelIndex","index","console","log","splice","msg","isAlertOpen","onDismiss","amount","indexToUpdateAmount","BrowserRouter","HeaderComponent_Header","Switch","Route","path","render","CreateAccountComponent_CreateAccount","p","AccountDetailComponent_ViewAccountDetail","VeiwTransactionsComponent_ViewTransactions","App","MainComponent_Main","ReactDOM","src_App"],"mappings":"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","file":"static/js/main.f5995024.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { Navbar, NavbarBrand, NavItem, Nav, NavbarToggler, Collapse } from 'reactstrap';\r\nexport class Header extends React.Component {\r\n    state = {\r\n        isOpenNavbar: false\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar dark expand=\"md\" color=\"dark\">\r\n                    <div className=\"container\">\r\n                        <NavbarBrand href=\"/\">Bank</NavbarBrand>\r\n                        <NavbarToggler onClick={this.toggleNavbar} />\r\n                        <Collapse isOpen={this.state.isOpenNavbar} navbar>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Link to=\"/\" className=\"nav-link\">\r\n                                    Dashboard\r\n                                    </Link>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <Link to=\"/viewaccounts\" className=\"nav-link\">\r\n                                    Accounts\r\n                                    </Link>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <Link to=\"/viewtransactions\" className=\"nav-link\">\r\n                                    Transactions\r\n                                    </Link>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n            </div>\r\n        )\r\n    };\r\n    toggleNavbar = () => {\r\n        this.setState({ isOpenNavbar: !this.state.isOpenNavbar });\r\n    }\r\n\r\n} ","import React from 'react'\r\nexport function Footer(){\r\n    return(\r\n        <footer className=\"page-footer\">\r\n        <div className=\" text-copyright text-center \">\r\n        &copy; Copyright,2018\r\n        </div>\r\n        </footer> \r\n    )\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nexport function Accounts(props) {\r\n    return (\r\n        <div className=\"col-md-12 col-lg-6\" >\r\n            <div className=\"m-1 p-1 shadow p-3 mb-5 bg-white rounded\" style={{ border: \"1px solid #ccc\" }}>\r\n                <div className=\"container\">\r\n                    <div className=\"row border-bottom\">\r\n                        <div className=\"mb-1 col-md-12 col-lg-5\">\r\n                            <h3 style={{ margin: \"0px\", padding: \"0px\" }}>Accounts</h3>\r\n                        </div>\r\n                        <div className=\" mb-1 col-md-12 d-flex flex-row-reverse col-lg-4\">\r\n                            <Link to=\"/createaccount\">\r\n                                <button className=\" btn btn-sm btn-dark\">Add new account</button>\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\" mb-1 col-md-12 d-flex flex-row-reverse col-lg-3\">\r\n                            <Link to=\"/viewaccounts\">\r\n                                <button className=\"btn btn-sm btn-success\">View all</button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                    <Link to=\"/viewaccounts\" className=\"text-dark\" style={{ textDecoration: 'none' }}>\r\n                        <div className=\"row\">\r\n                            <h1 className=\" col-12 text-center\">{props.accountsLength}</h1>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <h4 className=\" col-12 text-center\">Accounts</h4>\r\n                        </div>\r\n                    </Link>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Badge} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nexport function Transactions(props) {\r\n    return (\r\n        <div className=\"col-md-12 col-lg-6\" >\r\n            <div className=\"m-1 p-1 shadow p-3 mb-5 bg-white rounded\" style={{ border: \"1px solid #ccc\" }}>\r\n                <div className=\"container\">\r\n                    <div className=\"row border-bottom \">\r\n                        <div className=\"mb-1 col-md-12 col-lg-5\">\r\n                            <h3 style={{ margin: \"0px\", padding: \"0px\" }}>Transactions</h3>\r\n                        </div>\r\n                        <div className=\" mb-1 col-md-12 offset-lg-4 d-flex flex-row-reverse col-lg-3\">\r\n                            <Link to=\"/viewtransactions\">\r\n                                <button className=\"btn btn-sm btn-success\">View all</button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                    <Link to=\"/viewtransactions\" className=\"text-dark\" style={{ textDecoration: 'none' }}>\r\n                        <div className=\"row\">\r\n                            <h1 className=\" col-12 text-center\">{props.transctionsLength}</h1>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <h4 className=\" col-12 text-center\">Transcations</h4>\r\n                        </div>\r\n                    </Link>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                            <h6>\r\n                               <Badge color=\"secondary\">Debits:{props.debits}</Badge>\r\n                            </h6>\r\n                        </div>\r\n                        <div className=\"col-6 d-flex justify-content-end\">\r\n                            <h6>\r\n                            <Badge color=\"secondary\">Credits:{props.credits}</Badge>\r\n                            </h6>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}","import React from 'react';\r\nimport { Accounts } from '../AccountComponents/AccountsComponent';\r\nimport { Transactions } from '../TransactionComponents/TransactionsComponent';\r\nexport function Home(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Accounts   accountsLength={props.accounts === null ? '0' : props.accounts.length} />\r\n                <Transactions debits={props.debits} credits={props.credits} transctionsLength={props.transactions === null ? '0' : props.transactions.length} />\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nexport class CreateAccount extends React.Component {\r\n    checkValidation() {\r\n        const accountForm = document.getElementById(\"accountForm\");\r\n        const name = document.getElementById(\"name\");\r\n        const accountType = document.getElementById(\"accountType\");\r\n        const initDeposite = document.getElementById(\"initDeposite\");\r\n        if (accountForm.checkValidity() && name.value.trim() !== \"\" && name.value.trim() !== \"\") {\r\n            let accounts = JSON.parse(localStorage.getItem(\"accounts\"));\r\n            let id = Math.random() * 100000000000000000;\r\n            let registered = new Date().toLocaleString();\r\n            if (accounts === null) {\r\n                accounts = [];\r\n                accounts.push(\r\n                    {\r\n                        id: id,\r\n                        name: name.value,\r\n                        accountType: accountType.value,\r\n                        balance: initDeposite.value,\r\n                        registered: registered\r\n                    }\r\n                )\r\n                this.props.totalDebits(Number(initDeposite.value));\r\n                localStorage.setItem(\"accounts\", JSON.stringify(accounts));\r\n            } else {\r\n                accounts.push({\r\n                    id: Math.random() * 100000000000000000,\r\n                    name: name.value,\r\n                    accountType: accountType.value,\r\n                    balance: initDeposite.value,\r\n                    registered: new Date().toLocaleString()\r\n                });\r\n                this.props.totalDebits(Number(initDeposite.value));\r\n                localStorage.setItem(\"accounts\", JSON.stringify(accounts));\r\n            }\r\n            this.props.transactionTracer(\r\n                {\r\n                    id: id,\r\n                    balance: initDeposite.value,\r\n                    type: 'credit',\r\n                    registered: registered,\r\n                    description: \"Initial Credit\"\r\n                }\r\n            );\r\n            this.props.updateState();\r\n            this.props.updateAlert(true, 'Account Created !', 'success');\r\n            this.refs.navigateTo.click();\r\n        } else {\r\n            if (name.validity.valueMissing || name.value.trim() === \"\") {\r\n                this.props.updateAlert(true, 'Please enter full name !', 'danger');\r\n                name.focus();\r\n            }\r\n            else if (accountType.validity.valueMissing) {\r\n                this.props.updateAlert(true, 'Please select account type !', 'danger');\r\n                accountType.focus();\r\n\r\n            }\r\n            else if (initDeposite.validity.valueMissing) {\r\n                this.props.updateAlert(true, 'please deposite some amount !', 'danger');\r\n                initDeposite.focus();\r\n\r\n            }\r\n            else if (initDeposite.validity.rangeUnderflow) {\r\n                this.props.updateAlert(true, 'please deposite ammout > or = 100 !', 'danger');\r\n                initDeposite.focus();\r\n            }\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"mt-2 col-12\">\r\n                <h2 className=\"mt-1 text-center text-dark \">Enter account details below</h2>\r\n                <form id=\"accountForm\" noValidate>\r\n                    <div>\r\n                        <Link to=\"/\">\r\n                            <button type=\"button\" className=\"btn btn-sm btn-dark\">\r\n                                Back to Dashbord\r\n                            </button>\r\n                        </Link>\r\n                    </div>\r\n                    <div style={{ display: 'none' }}>\r\n                        <Link to=\"/viewaccounts\">\r\n                            <button ref=\"navigateTo\" type=\"button\" className=\"btn btn-sm btn-dark\">\r\n                                Back to Dashbord\r\n                            </button>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"name\">Enter Full Name</label>\r\n                        <input className=\"form-control\" type=\"text\" id=\"name\" placeholder=\"Enter full name\" required />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"accountType\">Select account type</label>\r\n                        <select className=\"form-control\" id=\"accountType\" required>\r\n                            <option value=\"\" >Select Account Type</option>\r\n                            <option value=\"current\">Current</option>\r\n                            <option value=\"saving\">Saving</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"initDeposite\">Initail Deposite</label>\r\n                        <input className=\"form-control\" type=\"number\" min=\"100\" id=\"initDeposite\" defaultValue=\"1000\" required />\r\n                    </div>\r\n                    <div className=\"d-flex flex-row-reverse\">\r\n                        <button type=\"button\" onClick={() => { this.checkValidation(this.props) }} className=\" btn btn-success btn-sm\">CREATE ACCOUNT</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nexport function ViewAccounts(props) {\r\n    if (props.accounts === null || props.accounts.length === 0) {\r\n        return (\r\n            <div className=\"col-12 mt-4\">\r\n                <div>\r\n                    <Link to=\"/\">\r\n                        <button type=\"button\" className=\"btn btn-sm btn-dark\">\r\n                            Back to Dashboard\r\n                    </button>\r\n                    </Link>\r\n                </div>\r\n                <h2 className=\"text-center text-dark\">\r\n                    There is no account!\r\n                 </h2>\r\n                 <div className=\"d-flex justify-content-center mb-4\">\r\n                 <Link to=\"/createaccount\" >\r\n                 <button type=\"button\" className=\"btn btn-primary\">Create account</button>\r\n                 </Link>\r\n                 </div>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n\r\n        return (\r\n            <div className=\"col-12 mt-4\">\r\n                <h2 className=\"text-center text-dark\">Accounts</h2>\r\n                <div className=\"mb-2\">\r\n                    <Link to=\"/\">\r\n                        <button type=\"button\" className=\"btn btn-sm btn-dark\">\r\n                            Back to Dashbord\r\n                    </button>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"table-responsive\">\r\n\r\n                    <table className=\"table table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Account #</th>\r\n                                <th>Name</th>\r\n                                <th>Registered</th>\r\n                                <th>Account Type</th>\r\n                                <th>Balance</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                props.accounts.map((account) => (\r\n                                    <tr key={account.id}>\r\n                                        <td style={{ color: 'blue', fontFamily: 'cursive', cursor: 'pointer' }}>\r\n                                            <Link to={\"accountdetail/\" + account.id}>{account.id}</Link></td>\r\n                                        <td>{account.name}</td>\r\n                                        <td style={{ fontFamily: 'cursive' }}>{account.registered}</td>\r\n                                        <td>{account.accountType}</td>\r\n                                        <td>{account.balance}</td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nexport class ViewTransactions extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false,\r\n            transactionDetail: null\r\n        }\r\n\r\n    }\r\n\r\n    TransactionDetail =\r\n        () => {\r\n            if (this.state.transactionDetail === null) {\r\n                return <div></div>\r\n            } else {\r\n                return (\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>Account #</td>\r\n                                    <td>{this.state.transactionDetail.id}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Registered</td>\r\n                                    <td>{this.state.transactionDetail.registered}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Type</td>\r\n                                    <td>{this.state.transactionDetail.type}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Balance</td>\r\n                                    <td>{this.state.transactionDetail.balance}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Description</td>\r\n                                    <td>{this.state.transactionDetail.description}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n    toggleModal = () => {\r\n        this.setState({\r\n            isModalOpen: false\r\n        })\r\n    }\r\n    render() {\r\n        if (this.props.transactions === null) {\r\n            return (\r\n                <div className=\"col-12 mt-4\">\r\n                    <div>\r\n                        <Link to=\"/\">\r\n                            <button type=\"button\" className=\"btn btn-sm btn-dark\">\r\n                                Back to Dashboard\r\n                             </button>\r\n                        </Link>\r\n                    </div>\r\n                    <h2 className=\"text-center text-dark\">\r\n                        There is no transaction!\r\n                    </h2>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"col-12 mt-4\">\r\n                    <Modal isOpen={this.state.isModalOpen}>\r\n                        <ModalHeader toggle={this.toggleModal}>\r\n                            Transaction\r\n                                    </ModalHeader>\r\n                        <ModalBody>\r\n                            {this.TransactionDetail(this.state.transactionDetail)}\r\n                        </ModalBody>\r\n                    </Modal>\r\n                    <h2 className=\"text-center text-dark\">Accounts</h2>\r\n                    <div className=\"mb-2\">\r\n                        <Link to=\"/\">\r\n                            <button type=\"button\" className=\"btn btn-sm btn-dark\">\r\n                                Back to Dashbord\r\n                                                </button>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-bordered\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Account #</th>\r\n                                    <th>Registered</th>\r\n                                    <th>Type</th>\r\n                                    <th>Balance</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.props.transactions.map((transaction) => (\r\n                                        <tr key={Math.random()}>\r\n                                            <td style={{ color: 'blue', fontFamily: 'cursive', cursor: 'pointer' }}>\r\n                                                <a href=\"void:javascript:(0)\" onClick={() => { this.setState({ isModalOpen: true, transactionDetail: transaction }) }}>{transaction.id}</a></td>\r\n                                            <td style={{ fontFamily: 'cursive' }}>{transaction.registered}</td>\r\n                                            <td>{transaction.type}</td>\r\n                                            <td>{transaction.balance}</td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Modal, ModalBody, ModalHeader, Alert } from 'reactstrap';\r\nexport class ViewAccountDetail extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOpenDepositeModal: false,\r\n            isOpenWithdrawModal: false,\r\n            isOpenAlert: false,\r\n            account: this.getAccount(),\r\n            alertMsg: '',\r\n            col: ''\r\n        }\r\n    }\r\n    getAccount = () => {\r\n        let account ;\r\n        let accounts = JSON.parse(localStorage.getItem(\"accounts\"));\r\n        if (accounts !== null && accounts.length !== 0) {\r\n            account = accounts.filter(\r\n                (acc) => acc.id === Number(this.props.props.match.params.id)\r\n            )[0]\r\n        }\r\n        return account;\r\n    }\r\n    closeModal = () => {\r\n        this.setState({\r\n            isOpenDepositeModal: false,\r\n            isOpenWithdrawModal: false,\r\n            account:this.getAccount()\r\n        })\r\n    }\r\n    openDepositeModal = () => {\r\n        this.setState({\r\n            isOpenDepositeModal: true\r\n        })\r\n    }\r\n    openWithdrawModal = () => {\r\n        this.setState({\r\n            isOpenWithdrawModal: true\r\n        })\r\n    }\r\n    closeAlert = () => {\r\n        this.setState(\r\n            {\r\n                isOpenAlert: false\r\n            }\r\n        )\r\n    }\r\n    DepositeModal = () => {\r\n\r\n        let depositeValidation = () => {\r\n            let cash = document.getElementById(\"cash\");\r\n            let depositeForm = document.getElementById(\"depositeForm\");\r\n            let account;\r\n            let accounts = JSON.parse(localStorage.getItem(\"accounts\"));\r\n            if (accounts !== null && accounts.length !== 0) {\r\n                account = accounts.filter(\r\n                    (acc) => acc.id === Number(this.props.props.match.params.id)\r\n                )[0]\r\n            }\r\n            if (depositeForm.checkValidity()) {\r\n                this.props.depositeAmount(\r\n                    cash.value,\r\n                    {\r\n                        id: account.id,\r\n                        registered: new Date().toLocaleString(),\r\n                        type: \"credit\",\r\n                        balance: cash.value\r\n                    }\r\n                )\r\n                this.props.totalDebits(Number(cash.value));\r\n                this.closeModal();\r\n                this.props.updateAlert(true, 'Amount deposited!', 'success');\r\n\r\n\r\n            }\r\n            else if (cash.validity.rangeUnderflow) {\r\n                this.setState({\r\n                    isOpenAlert: true,\r\n                    alertMsg: 'Please enter valid amount!',\r\n                    col: 'danger'\r\n                })\r\n            }\r\n            else if (cash.validity.valueMissing) {\r\n                this.setState({\r\n                    isOpenAlert: true,\r\n                    alertMsg: 'Please enter  amount!',\r\n                    col: 'danger'\r\n                })\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Modal isOpen={this.state.isOpenDepositeModal} >\r\n                <ModalHeader toggle={this.closeModal}>\r\n                    Deposite Amount\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <Alert isOpen={this.state.isOpenAlert} color={this.state.col} toggle={this.closeAlert}>\r\n                        {this.state.alertMsg}\r\n                    </Alert>\r\n                    <form id=\"depositeForm\" noValidate>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"cash\">Amount</label>\r\n                            <input className=\"form-control\" id=\"cash\" placeholder=\"Enter amount\" type=\"number\" min=\"0\" required />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"description\">Description</label>\r\n                            <input className=\"form-control\" id=\"description\" placeholder=\"Enter description(optional)\" type=\"text\" />\r\n                        </div>\r\n                        <div>\r\n                            <button onClick={depositeValidation} type=\"button\" className=\"btn btn-sm btn-dark\" id=\"deposite\">Deposite</button>\r\n                        </div>\r\n                    </form>\r\n                </ModalBody>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    // wtihdraw modal\r\n\r\n    WithdrawModal = () => {\r\n\r\n        let withdrawValidation = () => {\r\n            let cash = document.getElementById(\"cash\");\r\n            let withdrawForm = document.getElementById(\"withdrawForm\");\r\n            let account;\r\n            let accounts = JSON.parse(localStorage.getItem(\"accounts\"));\r\n            if (accounts !== null && accounts.length !== 0) {\r\n                account = accounts.filter(\r\n                    (acc) => acc.id === Number(this.props.props.match.params.id)\r\n                )[0]\r\n            }\r\n            if (withdrawForm.checkValidity()) {\r\n                this.props.withdrawAmount(\r\n                    cash.value,\r\n                    {\r\n                        id: account.id,\r\n                        registered: new Date().toLocaleString(),\r\n                        type: \"debit\",\r\n                        balance: cash.value\r\n                    }\r\n                )\r\n                this.props.totalCredits(Number(cash.value));\r\n                this.closeModal();\r\n                this.props.updateAlert(true, 'Amount withdrawn!', 'success');\r\n\r\n\r\n            }\r\n            else if (cash.validity.rangeUnderflow || cash.validity.rangeOverflow) {\r\n                this.setState({\r\n                    isOpenAlert: true,\r\n                    alertMsg: 'Please enter valid amount!',\r\n                    col: 'danger'\r\n                })\r\n            }\r\n            else if (cash.validity.valueMissing) {\r\n                this.setState({\r\n                    isOpenAlert: true,\r\n                    alertMsg: 'Please enter  amount!',\r\n                    col: 'danger'\r\n                })\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Modal isOpen={this.state.isOpenWithdrawModal} >\r\n                <ModalHeader toggle={this.closeModal}>\r\n                    Withdraw Amount\r\n            </ModalHeader>\r\n                <ModalBody>\r\n                    <Alert isOpen={this.state.isOpenAlert} color={this.state.col} toggle={this.closeAlert}>\r\n                        {this.state.alertMsg}\r\n                    </Alert>\r\n                    <form id=\"withdrawForm\" noValidate>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"cash\">Amount</label>\r\n                            <input className=\"form-control\" id=\"cash\" placeholder={`Maximum amount:${this.state.account.balance}`} type=\"number\" min=\"0\" max={this.state.account.balance} required />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"description\">Description</label>\r\n                            <input className=\"form-control\" id=\"description\" placeholder=\"Enter description(optional)\" type=\"text\" />\r\n                        </div>\r\n                        <div>\r\n                            <button onClick={withdrawValidation} type=\"button\" className=\"btn btn-sm btn-dark\" >Withdraw</button>\r\n                        </div>\r\n                    </form>\r\n                </ModalBody>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        let account;\r\n        let accounts = JSON.parse(localStorage.getItem(\"accounts\"));\r\n        if (accounts !== null && accounts.length !== 0) {\r\n            account = accounts.filter(\r\n                (acc) => acc.id === Number(this.props.props.match.params.id)\r\n            )[0];\r\n        }\r\n        let delAccount = () => {\r\n            let confirm = window.confirm(\"Are you sure you want to delete account!\");\r\n            if (confirm) {\r\n                this.props.delAccount(account.id);\r\n                this.props.updateAlert(true, `Account# ${account.id} has been deleted!`, \"danger\");\r\n                document.getElementById(\"navigateToBack\").click()\r\n            }\r\n\r\n        }\r\n        if (!account) {\r\n            return (\r\n                <div className=\"col-12 mt-2\">\r\n                    <div>\r\n                        <Link to=\"/viewaccounts\">\r\n                            <button type=\"button\" className=\"mb-2 btn btn-sm btn-dark\">\r\n                                Back to Accounts\r\n                                </button>\r\n                        </Link>\r\n                    </div>\r\n                    <h2 className=\"text-danger\">No record found!</h2>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"col-12 mt-2\" >\r\n                    <div>\r\n                        {this.DepositeModal()}\r\n                    </div>\r\n                    <div>\r\n                        {this.WithdrawModal()}\r\n                    </div>\r\n                    <h3 className=\"text-dark text-center\">Account Detail</h3>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <Link to=\"/viewaccounts\">\r\n                            <button type=\"button\" id=\"navigateToBack\" className=\"mb-2 btn btn-sm btn-dark\">\r\n                                Back to Accounts\r\n                                </button>\r\n                        </Link>\r\n                        <button onClick={delAccount} type=\"button\" className=\"mb-2 btn btn-sm btn-danger\">\r\n                            Delete Account\r\n                                </button>\r\n                    </div>\r\n                    <table className=\"table\">\r\n                        <tbody>\r\n\r\n                            <tr>\r\n                                <td>Account #</td>\r\n                                <td>{account.id}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Name</td>\r\n                                <td>{account.name}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Registered</td>\r\n                                <td>{account.registered}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Account Type</td>\r\n                                <td>{account.accountType}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Balance</td>\r\n                                <td>{account.balance}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <div>\r\n                        <div>\r\n                            <button type=\"button\" onClick={this.openDepositeModal} className=\"btn btn-sm btn-info\">\r\n                                Deposite\r\n                                </button>\r\n                            <button type=\"button\" onClick={this.openWithdrawModal} className=\"ml-4 btn btn-sm btn-danger\">\r\n                                Withdraw\r\n                                </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport { Alert } from 'reactstrap';\r\nimport { Header } from './HeaderComponent';\r\nimport { Footer } from './FooterComponent';\r\nimport { Home } from './HomeComponents/HomeComponent';\r\nimport { CreateAccount } from './AccountComponents/CreateAccountComponent'\r\nimport { ViewAccounts } from './AccountComponents/ViewAccountsComponent';\r\nimport { ViewTransactions } from './TransactionComponents/VeiwTransactionsComponent';\r\nimport { ViewAccountDetail } from './AccountComponents/AccountDetailComponent';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nexport class Main extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            accounts: JSON.parse(localStorage.getItem(\"accounts\")),\r\n            transctions: JSON.parse(localStorage.getItem(\"transactions\")),\r\n            debts: JSON.parse(localStorage.getItem(\"debits\")) === null ? 0 : JSON.parse(localStorage.getItem(\"debits\")),\r\n            credits: JSON.parse(localStorage.getItem(\"credits\")) === null ? 0 : JSON.parse(localStorage.getItem(\"credits\")),\r\n            isAlertOpen: false,\r\n            alertMsg: '',\r\n            color: '',\r\n        }\r\n    }\r\n    updateState = () => {\r\n        this.setState({\r\n            accounts: JSON.parse(localStorage.getItem(\"accounts\")),\r\n            transctions: JSON.parse(localStorage.getItem(\"transactions\"))\r\n        })\r\n    }\r\n    totalDebits = (deb) => {\r\n        let debts = JSON.parse(localStorage.getItem(\"debits\"));\r\n        if (debts === null) {\r\n            debts = deb;\r\n        }\r\n        else {\r\n            debts += deb\r\n        }\r\n        this.setState({\r\n            debts: debts\r\n        })\r\n        localStorage.setItem(\"debits\", JSON.stringify(debts));\r\n    }\r\n    totalCredits = (crd) => {\r\n        let credits = JSON.parse(localStorage.getItem(\"credits\"));\r\n        if (credits === null) {\r\n            credits = crd;\r\n        }\r\n        else {\r\n            credits += crd\r\n        }\r\n        this.setState({\r\n            credits: credits\r\n        })\r\n        localStorage.setItem(\"credits\", JSON.stringify(credits));\r\n    }\r\n    transactionTracer = (trans) => {\r\n        let transactions = JSON.parse(localStorage.getItem(\"transactions\"));\r\n        if (transactions === null) {\r\n            transactions = [];\r\n            transactions.push(trans);\r\n        } else {\r\n            transactions.push(trans);\r\n        }\r\n        localStorage.setItem(\"transactions\", JSON.stringify(transactions))\r\n        this.setState({\r\n            transactions: transactions\r\n        })\r\n    }\r\n    delAccount = (id) => {\r\n        let accounts = JSON.parse(localStorage.getItem(\"accounts\"));\r\n        let accountToDelIndex;\r\n        accounts.filter((account, index) => {\r\n            if (account.id === id) {\r\n                accountToDelIndex = index;\r\n                console.log(index);\r\n            }\r\n            return index;\r\n        });\r\n        accounts.splice(accountToDelIndex, 1);\r\n        localStorage.setItem(\"accounts\", JSON.stringify(accounts));\r\n        this.updateState();\r\n    }\r\n    updateAlert = (isOpen, msg, col) => {\r\n        this.setState({\r\n            isAlertOpen: isOpen,\r\n            alertMsg: msg,\r\n            color: col\r\n        })\r\n    }\r\n    onDismiss = () => {\r\n        this.setState({\r\n            isAlertOpen: false\r\n        })\r\n    }\r\n    depositeAmount = (amount, trans) => {\r\n        let accounts = JSON.parse(localStorage.getItem(\"accounts\"));\r\n        let indexToUpdateAmount;\r\n        accounts.filter((account, index) => {\r\n            if (account.id === trans.id) {\r\n                indexToUpdateAmount = index;\r\n            }\r\n            return index;\r\n        });\r\n        accounts[indexToUpdateAmount].balance = Number(accounts[indexToUpdateAmount].balance) + Number(amount);\r\n        localStorage.setItem(\"accounts\", JSON.stringify(accounts));\r\n        this.transactionTracer(trans);\r\n        this.updateState();\r\n    }\r\n    withdrawAmount = (amount, trans) => {\r\n        let accounts = JSON.parse(localStorage.getItem(\"accounts\"));\r\n        let indexToUpdateAmount;\r\n        accounts.filter((account, index) => {\r\n            if (account.id === trans.id) {\r\n                indexToUpdateAmount = index;\r\n            }\r\n            return index;\r\n        });\r\n        accounts[indexToUpdateAmount].balance -= amount;\r\n        localStorage.setItem(\"accounts\", JSON.stringify(accounts));\r\n        this.transactionTracer(trans);\r\n        this.updateState();\r\n    }\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <div>\r\n                    <Header />\r\n                    <div className=\"container\">\r\n                        <Alert color={this.state.color} isOpen={this.state.isAlertOpen} toggle={this.onDismiss}>{this.state.alertMsg}</Alert>\r\n                        <div className=\"row\">\r\n                            <Switch>\r\n                                <Route path=\"/createaccount\" render={() => <CreateAccount updateState={this.updateState} totalDebits={this.totalDebits} transactionTracer={this.transactionTracer} updateAlert={this.updateAlert} />} />\r\n                                <Route path=\"/accountdetail/:id\" render={(p) => <ViewAccountDetail props={p} delAccount={this.delAccount} totalCredits={this.totalCredits} totalDebits={this.totalDebits} depositeAmount={this.depositeAmount} withdrawAmount={this.withdrawAmount} updateAlert={this.updateAlert} />} />\r\n                                <Route path=\"/viewaccounts\" render={() => <ViewAccounts accounts={this.state.accounts} />} />\r\n                                <Route path=\"/viewtransactions\" render={() => <ViewTransactions transactions={this.state.transctions} />} />\r\n                                <Route path=\"/\" render={() => <Home accounts={this.state.accounts} credits={this.state.credits} debits={this.state.debts} updateAlert={this.updateAlert} transactions={this.state.transctions} />} />\r\n                            </Switch>\r\n                        </div>\r\n                    </div>\r\n                    <Footer />\r\n                </div>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Main } from './Components/MainComponent';\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n                <div>\r\n                        <Main />\r\n                </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}